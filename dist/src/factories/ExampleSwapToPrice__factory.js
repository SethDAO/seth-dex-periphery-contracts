"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExampleSwapToPrice__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "factory_",
                type: "address",
            },
            {
                internalType: "contract ISethRouter01",
                name: "router_",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "factory",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "router",
        outputs: [
            {
                internalType: "contract ISethRouter01",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "tokenA",
                type: "address",
            },
            {
                internalType: "address",
                name: "tokenB",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "truePriceTokenA",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "truePriceTokenB",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "maxSpendTokenA",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "maxSpendTokenB",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
            },
        ],
        name: "swapToPrice",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
var _bytecode = "";
var ExampleSwapToPrice__factory = /** @class */ (function (_super) {
    __extends(ExampleSwapToPrice__factory, _super);
    function ExampleSwapToPrice__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (args.length === 1) {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        else {
            _this = _super.apply(this, args) || this;
        }
        return _this;
    }
    ExampleSwapToPrice__factory.prototype.deploy = function (factory_, router_, overrides) {
        return _super.prototype.deploy.call(this, factory_, router_, overrides || {});
    };
    ExampleSwapToPrice__factory.prototype.getDeployTransaction = function (factory_, router_, overrides) {
        return _super.prototype.getDeployTransaction.call(this, factory_, router_, overrides || {});
    };
    ExampleSwapToPrice__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    ExampleSwapToPrice__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    ExampleSwapToPrice__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    ExampleSwapToPrice__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    ExampleSwapToPrice__factory.bytecode = _bytecode;
    ExampleSwapToPrice__factory.abi = _abi;
    return ExampleSwapToPrice__factory;
}(ethers_1.ContractFactory));
exports.ExampleSwapToPrice__factory = ExampleSwapToPrice__factory;
